# Python 3.3 missing from Travis
matrix:
  include:
    # OCaml
    - os: linux
      env:
        - OCAML_VERSION=4.00
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - cd ../test && /home/travis/.opam/default/bin/dune build && ./_build/default/test.exe
    - os: linux
      env:
        - OCAML_VERSION=4.01
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - cd ../test && /home/travis/.opam/default/bin/dune build && ./_build/default/test.exe
    - os: linux
      env:
        - OCAML_VERSION=4.02
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - cd ../test && /home/travis/.opam/default/bin/dune build && ./_build/default/test.exe
    - os: linux
      env:
        - OCAML_VERSION=4.03
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - cd ../test && /home/travis/.opam/default/bin/dune build && ./_build/default/test.exe
    - os: linux
      env:
        - OCAML_VERSION=4.04
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - cd ../test && /home/travis/.opam/default/bin/dune build && ./_build/default/test.exe
    - os: linux
      env:
        - OCAML_VERSION=4.05
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - cd ../test && /home/travis/.opam/default/bin/dune build && ./_build/default/test.exe
    - os: linux
      env:
        - OCAML_VERSION=4.06
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - cd ../test && /home/travis/.opam/default/bin/dune build && ./_build/default/test.exe
    - os: linux
      env:
        - OCAML_VERSION=4.07
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - cd ../test && /home/travis/.opam/default/bin/dune build && ./_build/default/test.exe
    - os: linux
      env:
        - OCAML_VERSION=4.08
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - cd ../test && /home/travis/.opam/default/bin/dune build && ./_build/default/test.exe
    - os: linux
      env:
        - OCAML_VERSION=4.09
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - cd ../test && /home/travis/.opam/default/bin/dune build && ./_build/default/test.exe
    - os: linux
      env:
        - OCAML_VERSION=4.10
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - cd ../test && /home/travis/.opam/default/bin/dune build && ./_build/default/test.exe

    # Python
    - language: python
      os: linux
      python:
        - "3.4"
      install:
        - cd python && pip install -r dev-requirements.txt && ./local_build.sh && cd test && pip install -r requirements.txt
      script:
        - pytest -vv -s
    - language: python
      os: linux
      python:
        - "3.5"
      install:
        - cd python && pip install -r dev-requirements.txt && ./local_build.sh && cd test && pip install -r requirements.txt
      script:
        - pytest -vv -s
    - language: python
      os: linux
      python:
        - "3.6"
      install:
        - cd python && pip install -r dev-requirements.txt && ./local_build.sh && cd test && pip install -r requirements.txt
      script:
        - pytest -vv -s
    - language: python
      os: linux
      python:
        - "3.7"
      install:
        - cd python && pip install -r dev-requirements.txt && ./local_build.sh && cd test && pip install -r requirements.txt
      script:
        - pytest -vv -s
    - language: python
      os: linux
      python:
        - "3.8"
      install:
        - cd python && pip install -r dev-requirements.txt && ./local_build.sh && cd test && pip install -r requirements.txt
      script:
        - pytest -vv -s

    # Ruby
    - language: ruby
      os: linux
      ruby:
        - "2.1.0"
      install:
        - cd ruby && ./local_build.sh && cd test && ./install_dependencies.sh
      script:
        - ruby test_behavior.rb && ruby test_correctness.rb
    - language: ruby
      os: linux
      ruby:
        - "2.1"
      install:
        - cd ruby && ./local_build.sh && cd test && ./install_dependencies.sh
      script:
        - ruby test_behavior.rb && ruby test_correctness.rb
    - language: ruby
      os: linux
      ruby:
        - "2.2"
      install:
        - cd ruby && ./local_build.sh && cd test && ./install_dependencies.sh
      script:
        - ruby test_behavior.rb && ruby test_correctness.rb
    - language: ruby
      os: linux
      ruby:
        - "2.3"
      install:
        - cd ruby && ./local_build.sh && cd test && ./install_dependencies.sh
      script:
        - ruby test_behavior.rb && ruby test_correctness.rb
    - language: ruby
      os: linux
      ruby:
        - "2.4"
      install:
        - cd ruby && ./local_build.sh && cd test && ./install_dependencies.sh
      script:
        - ruby test_behavior.rb && ruby test_correctness.rb
    - language: ruby
      os: linux
      ruby:
        - "2.5"
      install:
        - cd ruby && ./local_build.sh && cd test && ./install_dependencies.sh
      script:
        - ruby test_behavior.rb && ruby test_correctness.rb
    - language: ruby
      os: linux
      ruby:
        - "2.7"
      install:
        - cd ruby && ./local_build.sh && cd test && ./install_dependencies.sh
      script:
        - ruby test_behavior.rb && ruby test_correctness.rb

    # For some reason, Python on OSX not supported by default, maybe add it later

    # OSX - OCaml
    - os: osx
      env:
        - OCAML_VERSION=4.00
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - cd ../test && /home/travis/.opam/default/bin/dune build && ./_build/default/test.exe
    - os: osx
      env:
        - OCAML_VERSION=4.01
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - cd ../test && /home/travis/.opam/default/bin/dune build && ./_build/default/test.exe
    - os: osx
      env:
        - OCAML_VERSION=4.02
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - cd ../test && /home/travis/.opam/default/bin/dune build && ./_build/default/test.exe
    - os: osx
      env:
        - OCAML_VERSION=4.03
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - cd ../test && /home/travis/.opam/default/bin/dune build && ./_build/default/test.exe
    - os: osx
      env:
        - OCAML_VERSION=4.04
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - cd ../test && /home/travis/.opam/default/bin/dune build && ./_build/default/test.exe
    - os: osx
      env:
        - OCAML_VERSION=4.05
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - cd ../test && /home/travis/.opam/default/bin/dune build && ./_build/default/test.exe
    - os: osx
      env:
        - OCAML_VERSION=4.06
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - cd ../test && /home/travis/.opam/default/bin/dune build && ./_build/default/test.exe
    - os: osx
      env:
        - OCAML_VERSION=4.07
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - cd ../test && /home/travis/.opam/default/bin/dune build && ./_build/default/test.exe
    - os: osx
      env:
        - OCAML_VERSION=4.08
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - cd ../test && /home/travis/.opam/default/bin/dune build && ./_build/default/test.exe
    - os: osx
      env:
        - OCAML_VERSION=4.09
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - cd ../test && /home/travis/.opam/default/bin/dune build && ./_build/default/test.exe
    - os: osx
      env:
        - OCAML_VERSION=4.10
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - cd ../test && /home/travis/.opam/default/bin/dune build && ./_build/default/test.exe

    # OSX - Ruby, machine setup fails before 2.4
    - language: ruby
      os: osx
      ruby:
        - "2.4"
      install:
        - cd ruby && ./local_build.sh && cd test && ./install_dependencies.sh
      script:
        - ruby test_behavior.rb && ruby test_correctness.rb
    - language: ruby
      os: osx
      ruby:
        - "2.5"
      install:
        - cd ruby && ./local_build.sh && cd test && ./install_dependencies.sh
      script:
        - ruby test_behavior.rb && ruby test_correctness.rb
    - language: ruby
      os: osx
      ruby:
        - "2.7"
      install:
        - cd ruby && ./local_build.sh && cd test && ./install_dependencies.sh
      script:
        - ruby test_behavior.rb && ruby test_correctness.rb

    # Memory leaks OCaml
    # OCaml
    - os: linux
      before_install:
        - sudo apt-get update
        - sudo apt-get install -y valgrind
      env:
        - OCAML_VERSION=4.00
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - "cd ../test && /home/travis/.opam/default/bin/dune build && valgrind --log-fd=1 ./_build/default/test.exe | grep 'definitely lost: 0 byte'"
    - os: linux
      before_install:
        - sudo apt-get update
        - sudo apt-get install -y valgrind
      env:
        - OCAML_VERSION=4.01
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - "cd ../test && /home/travis/.opam/default/bin/dune build && valgrind --log-fd=1 ./_build/default/test.exe | grep 'definitely lost: 0 byte'"
    - os: linux
      before_install:
        - sudo apt-get update
        - sudo apt-get install -y valgrind
      env:
        - OCAML_VERSION=4.02
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - "cd ../test && /home/travis/.opam/default/bin/dune build && valgrind --log-fd=1 ./_build/default/test.exe | grep 'definitely lost: 0 byte'"
    - os: linux
      before_install:
        - sudo apt-get update
        - sudo apt-get install -y valgrind
      env:
        - OCAML_VERSION=4.03
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - "cd ../test && /home/travis/.opam/default/bin/dune build && valgrind --log-fd=1 ./_build/default/test.exe | grep 'definitely lost: 0 byte'"
    - os: linux
      before_install:
        - sudo apt-get update
        - sudo apt-get install -y valgrind
      env:
        - OCAML_VERSION=4.04
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - "cd ../test && /home/travis/.opam/default/bin/dune build && valgrind --log-fd=1 ./_build/default/test.exe | grep 'definitely lost: 0 byte'"
    - os: linux
      before_install:
        - sudo apt-get update
        - sudo apt-get install -y valgrind
      env:
        - OCAML_VERSION=4.05
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - "cd ../test && /home/travis/.opam/default/bin/dune build && valgrind --log-fd=1 ./_build/default/test.exe | grep 'definitely lost: 0 byte'"
    - os: linux
      before_install:
        - sudo apt-get update
        - sudo apt-get install -y valgrind
      env:
        - OCAML_VERSION=4.06
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - "cd ../test && /home/travis/.opam/default/bin/dune build && valgrind --log-fd=1 ./_build/default/test.exe | grep 'definitely lost: 0 byte'"
    - os: linux
      before_install:
        - sudo apt-get update
        - sudo apt-get install -y valgrind
      env:
        - OCAML_VERSION=4.07
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - "cd ../test && /home/travis/.opam/default/bin/dune build && valgrind --log-fd=1 ./_build/default/test.exe | grep 'definitely lost: 0 byte'"
    - os: linux
      before_install:
        - sudo apt-get update
        - sudo apt-get install -y valgrind
      env:
        - OCAML_VERSION=4.08
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - "cd ../test && /home/travis/.opam/default/bin/dune build && valgrind --log-fd=1 ./_build/default/test.exe | grep 'definitely lost: 0 byte'"
    - os: linux
      before_install:
        - sudo apt-get update
        - sudo apt-get install -y valgrind
      env:
        - OCAML_VERSION=4.09
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - "cd ../test && /home/travis/.opam/default/bin/dune build && valgrind --log-fd=1 ./_build/default/test.exe | grep 'definitely lost: 0 byte'"
    - os: linux
      before_install:
        - sudo apt-get update
        - sudo apt-get install -y valgrind
      env:
        - OCAML_VERSION=4.10
      install:
        - cd ocaml && ./.travis-ocaml.sh && cd lib && cp -R ../../lib ext && opam install -y .
      script:
        - "cd ../test && /home/travis/.opam/default/bin/dune build && valgrind --log-fd=1 ./_build/default/test.exe | grep 'definitely lost: 0 byte'"

    # Memory leaks, MRI will leak according to valgrind due to it's garbage collector implementation, so don't test for Ruby
    - language: python
      name: 'Memory leaks Python 3.4'
      os: linux
      before_install:
        - sudo apt-get update
        - sudo apt-get install -y valgrind
      python:
        - "3.4"
      install:
        - cd python && pip install -r dev-requirements.txt && ./local_build.sh && cd test && pip install -r requirements.txt
      script:
        - "rm -Rf test_correctness.py && valgrind --log-fd=1 pytest -vv -s | grep 'definitely lost: 0 byte'"
    - language: python
      name: 'Memory leaks Python 3.5'
      os: linux
      before_install:
        - sudo apt-get update
        - sudo apt-get install -y valgrind
      python:
        - "3.5"
      install:
        - cd python && pip install -r dev-requirements.txt && ./local_build.sh && cd test && pip install -r requirements.txt
      script:
        - "rm -Rf test_correctness.py && valgrind --log-fd=1 pytest -vv -s | grep 'definitely lost: 0 byte'"
    - language: python
      name: 'Memory leaks Python 3.6'
      os: linux
      before_install:
        - sudo apt-get update
        - sudo apt-get install -y valgrind
      python:
        - "3.6"
      install:
        - cd python && pip install -r dev-requirements.txt && ./local_build.sh && cd test && pip install -r requirements.txt
      script:
        - "rm -Rf test_correctness.py && valgrind --log-fd=1 pytest -vv -s | grep 'definitely lost: 0 byte'"
    - language: python
      name: 'Memory leaks Python 3.7'
      os: linux
      before_install:
        - sudo apt-get update
        - sudo apt-get install -y valgrind
      python:
        - "3.7"
      install:
        - cd python && pip install -r dev-requirements.txt && ./local_build.sh && cd test && pip install -r requirements.txt
      script:
        - "rm -Rf test_correctness.py && valgrind --log-fd=1 pytest -vv -s | grep 'definitely lost: 0 byte'"
    - language: python
      name: 'Memory leaks Python 3.8'
      os: linux
      before_install:
        - sudo apt-get update
        - sudo apt-get install -y valgrind
      python:
        - "3.8"
      install:
        - cd python && pip install -r dev-requirements.txt && ./local_build.sh && cd test && pip install -r requirements.txt
      script:
        - "rm -Rf test_correctness.py && valgrind --log-fd=1 pytest -vv -s | grep 'definitely lost: 0 byte'"